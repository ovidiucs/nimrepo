import macros


echo " text style expression macro "

macro gen_hello(): typed =
  let source = """
proc hello() =
  echo "hi"
"""
  result = parseStmt(source)

gen_hello()
hello()

echo """
The macro is defined like a procedure except you use “macro” instead of “proc”.
The result is the AST you want to insert at the point the macro is called.
The parseStmt converts the string to AST. The “hello()” call calls the hello procedure generated by the macro.
"""


echo """ same expression macro in AST style."""


dumpTree:
  proc hello() =
    echo "hi"




proc sayHi(name: string) =
  echo "Hello ", name

sayHi("World")
sayHi("me!!")
sayHi "World without paranthesis"
"World ".sayHi


